<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <link rel="shortcut icon" type="image/x-icon" href="/assets/favicon.ico" />
  <title>Downloading the Source Tree | Android Open Source</title>

  <link href="/assets/main.css" rel="stylesheet" type="text/css" />
</head>

<a name="top"/>

<div id="header">
  <div id="headerLeft">
    <a href="/" tabindex="-1"><img src="/images/open_source.png" alt="Android Open Source Project" /></a>
    <ul class="source">
      <li id="home-link"><a href="/index.html"><span>Home</span></a></li>   
      <li id="source-link"><a href="/source/index.html"
                              onClick="return loadLast('source')"><span>Source</span></a></li>
      <li id="compatibility-link"><a href="/compatibility/index.html"
                              onClick="return loadLast('compatibility')"><span>Compatibility</span></a></li>
      <li id="tech-link"><a href="/tech/index.html"
                              onClick="return loadLast('tech')"><span>Tech Info</span></a></li>
      <li id="community-link"><a href="/community/index.html"
                              onClick="return loadLast('community')"><span>Community</span></a></li>
      <li id="about-link"><a href="/about/index.html"
                              onClick="return loadLast('about')"><span>About</span></a></li>
    </ul> 
  </div>
  <div id="headerRight">
    <div id="headerLinks">
      <span class="text">
        <a href="http://www.android.com">Android.com</a>
      </span>
    </div>
  </div>
</div>

<div id=sidebar>
  <h1 id="getting-started">Getting Started</h1>
<ul>
<li><a href="initializing.html">Initializing the Build Environment</a></li>
<li><a href="downloading.html">Downloading the Source</a></li>
<li><a href="building.html">Building and Running</a></li>
<li><a href="building-devices.html">Building for Devices</a></li>
<li><a href="building-kernels.html">Building Kernels</a></li>
<li><a href="known-issues.html">Known Issues</a></li>
</ul>
<h1 id="navigating-the-source">Navigating the Source</h1>
<ul>
<li><a href="overview.html">Platform Overview</a></li>
<li><a href="code-lines.html">Branches &amp; Releases</a></li>
<li><a href="build-numbers.html">Build Numbers</a></li>
</ul>
<h1 id="contributing">Contributing</h1>
<ul>
<li><a href="life-of-a-patch.html">Life of a Patch</a></li>
<li><a href="submit-patches.html">Submitting Patches</a></li>
<li><a href="life-of-a-bug.html">Life of a Bug</a></li>
<li><a href="report-bugs.html">Reporting Bugs</a></li>
</ul>
<h1 id="reference">Reference</h1>
<ul>
<li><a href="version-control.html">Version Control</a><ul>
<li><a href="using-repo.html">Repo Commands</a></li>
<li><a href="git-resources.html">Git Resources</a></li>
</ul>
</li>
<li><a href="using-eclipse.html">Using Eclipse</a></li>
<li><a href="code-style.html">Code Style Guidelines</a></li>
<li><a href="/faqs.html">FAQs</a></li>
</ul>
</div>

<div id=main>
  <!--
   Copyright 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<h1 id="downloading-the-source-tree">Downloading the Source Tree</h1>
<h2 id="installing-repo">Installing Repo</h2>
<p>Repo is a tool that makes it easier to work with Git in the context of Android. For more information about Repo, see <a href="version-control.html">Version Control</a>.</p>
<p>To install, initialize, and configure Repo, follow these steps:</p>
<ul>
<li>
<p>Make sure you have a bin/ directory in your home directory, and that it is included in your path:</p>
<pre><code>$ mkdir ~/bin
$ PATH=~/bin:$PATH
</code></pre>
</li>
<li>
<p>Download the Repo script and ensure it is executable:</p>
<pre><code>$ curl https://dl-ssl.google.com/dl/googlesource/git-repo/repo &gt; ~/bin/repo
$ chmod a+x ~/bin/repo
</code></pre>
</li>
<li>
<p>The SHA-1 checksum for repo is 29ba4221d4fccdfa8d87931cd73466fdc24040b5</p>
</li>
</ul>
<h2 id="initializing-a-repo-client">Initializing a Repo client</h2>
<p>After installing Repo, set up your client to access the android source repository:</p>
<ul>
<li>
<p>Create an empty directory to hold your working files.
 If you're using MacOS, this has to be on a case-sensitive filesystem.
 Give it any name you like:</p>
<pre><code>$ mkdir WORKING_DIRECTORY
$ cd WORKING_DIRECTORY
</code></pre>
</li>
<li>
<p>Run <code>repo init</code> to bring down the latest version of Repo with all its most recent bug fixes.  You must specify a URL for the manifest, which specifies where the various repositories included in the Android source will be placed within your working directory.</p>
<pre><code>$ repo init -u https://android.googlesource.com/platform/manifest
</code></pre>
<p>To check out a branch other than "master", specify it with -b:</p>
<pre><code>$ repo init -u https://android.googlesource.com/platform/manifest -b android-4.0.1_r1
</code></pre>
</li>
<li>
<p>When prompted, please configure Repo with your real name and email address.  To use the Gerrit code-review tool, you will need an email address that is connected with a <a href="http://www.google.com/accounts">registered Google account</a>.  Make sure this is a live address at which you can receive messages.  The name that you provide here will show up in attributions for your code submissions.</p>
</li>
</ul>
<p>A successful initialization will end with a message stating that Repo is initialized in your working directory.  Your client directory should now contain a <code>.repo</code> directory where files such as the manifest will be kept.</p>
<h2 id="getting-the-files">Getting the files</h2>
<p>To pull down files to your working directory from the repositories as specified in the default manifest, run</p>
<pre><code>$ repo sync
</code></pre>
<p>The Android source files will be located in your working directory
under their project names. The initial sync operation will take
an hour or more to complete. For more about <code>repo sync</code> and other
Repo commands, see <a href="version-control.html">Version Control</a>.</p>
<h2 id="using-authentication">Using authentication</h2>
<p>By default, access to the Android source code is anonymous. To protect the
servers against excessive usage, each IP address is associated with a quota.</p>
<p>When sharing an IP address with other users (e.g. when accessing the source
repositories from beyond a NAT firewall), the quotas can trigger even for
regular usage patterns (e.g. if many users sync new clients from the same IP
address within a short period).</p>
<p>In that case, it is possible to use authenticated access, which then uses
a separate quota for each user, regardless of the IP address.</p>
<p>The first step is to create a password from
<a href="https://android.googlesource.com/new-password">the password generator</a> and
to save it in <code>~/.netrc</code> according to the instructions on that page.</p>
<p>The second step is to force authenticated access, by using the following
manifest URI: <code>https://android.googlesource.com/a/platform/manifest</code>. Notice
how the <code>/a/</code> directory prefix triggers mandatory authentication. You can
convert an existing client to use mandatory authentication with the following
command:</p>
<pre><code>$ repo init -u https://android.googlesource.com/a/platform/manifest
</code></pre>
<h2 id="troubleshooting-network-issues">Troubleshooting network issues</h2>
<p>When downloading from behind a proxy (which is common in some
corporate environments), it might be necessary to explicitly
specify the proxy that is then used by repo:</p>
<pre><code>$ export HTTP_PROXY=http://&lt;proxy_user_id&gt;:&lt;proxy_password&gt;@&lt;proxy_server&gt;:&lt;proxy_port&gt;
$ export HTTPS_PROXY=http://&lt;proxy_user_id&gt;:&lt;proxy_password&gt;@&lt;proxy_server&gt;:&lt;proxy_port&gt;
</code></pre>
<p>More rarely, Linux clients experience connectivity issues, getting
stuck in the middle of downloads (typically during "Receiving objects").
It has been reported that tweaking the settings of the TCP/IP stack and
using non-parallel commands can improve the situation. You need root
access to modify the TCP setting:</p>
<pre><code>$ sudo sysctl -w net.ipv4.tcp_window_scaling=0
$ repo sync -j1
</code></pre>
<h2 id="using-a-local-mirror">Using a local mirror</h2>
<p>When using many clients, especially in situations where bandwidth is scarce,
it is better to create a local mirror of the entire server content, and to
sync clients from that mirror (which requires no network access).</p>
<p>These instructions assume that the mirror is created in <code>/usr/local/aosp/mirror</code>.
The first step is to create and sync the mirror itself, which uses close to
10GB of network bandwidth and a similar amount of disk space. Notice the
<code>--mirror</code> flag, which can only be specified when creating a new client:</p>
<pre><code>$ mkdir -p /usr/local/aosp/mirror
$ cd /usr/local/aosp/mirror
$ repo init -u https://android.googlesource.com/mirror/manifest --mirror
$ repo sync
</code></pre>
<p>Once the mirror is synced, new clients can be created from it. Note that it's
important to specify an absolute path:</p>
<pre><code>$ mkdir -p /usr/local/aosp/master
$ cd /usr/local/aosp/master
$ repo init -u /usr/local/aosp/mirror/platform/manifest.git
$ repo sync
</code></pre>
<p>Finally, to sync a client against the server, the mirror needs to be synced
against the server, then the client against the mirror:</p>
<pre><code>$ cd /usr/local/aosp/mirror
$ repo sync
$ cd /usr/local/aosp/master
$ repo sync
</code></pre>
<p>It's possible to store the mirror on a LAN server and to access it over
NFS, SSH or Git. It's also possible to store it on a removable drive and
to pass that drive around between users or between machines.</p>
<h2 id="verifying-git-tags">Verifying Git Tags</h2>
<p>Load the following public key into your GnuPG key database. The key is used to sign annotated tags that represent releases.</p>
<pre><code>$ gpg --import
</code></pre>
<p>Copy and paste the key(s) below, then enter EOF (Ctrl-D) to end the input and process the keys.</p>
<pre><code>-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.4.2.2 (GNU/Linux)

mQGiBEnnWD4RBACt9/h4v9xnnGDou13y3dvOx6/t43LPPIxeJ8eX9WB+8LLuROSV
lFhpHawsVAcFlmi7f7jdSRF+OvtZL9ShPKdLfwBJMNkU66/TZmPewS4m782ndtw7
8tR1cXb197Ob8kOfQB3A9yk2XZ4ei4ZC3i6wVdqHLRxABdncwu5hOF9KXwCgkxMD
u4PVgChaAJzTYJ1EG+UYBIUEAJmfearb0qRAN7dEoff0FeXsEaUA6U90sEoVks0Z
wNj96SA8BL+a1OoEUUfpMhiHyLuQSftxisJxTh+2QclzDviDyaTrkANjdYY7p2cq
/HMdOY7LJlHaqtXmZxXjjtw5Uc2QG8UY8aziU3IE9nTjSwCXeJnuyvoizl9/I1S5
jU5SA/9WwIps4SC84ielIXiGWEqq6i6/sk4I9q1YemZF2XVVKnmI1F4iCMtNKsR4
MGSa1gA8s4iQbsKNWPgp7M3a51JCVCu6l/8zTpA+uUGapw4tWCp4o0dpIvDPBEa9
b/aF/ygcR8mh5hgUfpF9IpXdknOsbKCvM9lSSfRciETykZc4wrRCVGhlIEFuZHJv
aWQgT3BlbiBTb3VyY2UgUHJvamVjdCA8aW5pdGlhbC1jb250cmlidXRpb25AYW5k
cm9pZC5jb20+iGAEExECACAFAknnWD4CGwMGCwkIBwMCBBUCCAMEFgIDAQIeAQIX
gAAKCRDorT+BmrEOeNr+AJ42Xy6tEW7r3KzrJxnRX8mij9z8tgCdFfQYiHpYngkI
2t09Ed+9Bm4gmEO5Ag0ESedYRBAIAKVW1JcMBWvV/0Bo9WiByJ9WJ5swMN36/vAl
QN4mWRhfzDOk/Rosdb0csAO/l8Kz0gKQPOfObtyYjvI8JMC3rmi+LIvSUT9806Up
hisyEmmHv6U8gUb/xHLIanXGxwhYzjgeuAXVCsv+EvoPIHbY4L/KvP5x+oCJIDbk
C2b1TvVk9PryzmE4BPIQL/NtgR1oLWm/uWR9zRUFtBnE411aMAN3qnAHBBMZzKMX
LWBGWE0znfRrnczI5p49i2YZJAjyX1P2WzmScK49CV82dzLo71MnrF6fj+Udtb5+
OgTg7Cow+8PRaTkJEW5Y2JIZpnRUq0CYxAmHYX79EMKHDSThf/8AAwUIAJPWsB/M
pK+KMs/s3r6nJrnYLTfdZhtmQXimpoDMJg1zxmL8UfNUKiQZ6esoAWtDgpqt7Y7s
KZ8laHRARonte394hidZzM5nb6hQvpPjt2OlPRsyqVxw4c/KsjADtAuKW9/d8phb
N8bTyOJo856qg4oOEzKG9eeF7oaZTYBy33BTL0408sEBxiMior6b8LrZrAhkqDjA
vUXRwm/fFKgpsOysxC6xi553CxBUCH2omNV6Ka1LNMwzSp9ILz8jEGqmUtkBszwo
G1S8fXgE0Lq3cdDM/GJ4QXP/p6LiwNF99faDMTV3+2SAOGvytOX6KjKVzKOSsfJQ
hN0DlsIw8hqJc0WISQQYEQIACQUCSedYRAIbDAAKCRDorT+BmrEOeCUOAJ9qmR0l
EXzeoxcdoafxqf6gZlJZlACgkWF7wi2YLW3Oa+jv2QSTlrx4KLM=
=Wi5D
-----END PGP PUBLIC KEY BLOCK-----
</code></pre>
<p>After importing the keys, you can verify any tag with</p>
<pre><code>$ git tag -v TAG_NAME
</code></pre>
<p>If you haven't <a href="initializing.html#ccache">set up ccache</a> yet,
now would be a good time to do it.</p>
<h1 id="next-build-the-code">Next: Build the code</h1>
<p>You now have a complete local copy of the Android codebase.  Continue on to <a href="building.html">building</a>....</p>
</div>

<div id="footer"> 
  <div id="copyright">
  </div> 
 
  <div id="footerLeft">     
    <p> 
      <a href="http://www.google.com/intl/en/policies/">Privacy &amp; Terms</a>
    </p> 
  </div>

  <div id="footerRight">
    <p>
      <a href="#top">Go to Top</a>
    </p>
  </div>
</div> 

